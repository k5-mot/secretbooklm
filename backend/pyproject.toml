[project]
name = "langchain-motex"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "aiofiles>=24.1.0",
    "fastapi>=0.115.11",
    "langchain>=0.3.20",
    "langchain-community>=0.3.19",
    "langchain-core>=0.3.43",
    "langchain-google-genai>=2.1.0",
    "langchain-ollama>=0.2.3",
    "langchain-openai>=0.3.8",
    "langchain-text-splitters>=0.3.6",
    "langserve>=0.3.1",
    "pdf2image>=1.17.0",
    "pypdf>=5.4.0",
    "python-multipart>=0.0.20",
    "sse-starlette>=2.2.1",
    "uvicorn>=0.34.0",
]

[dependency-groups]
dev = [
    "pyright>=1.1.396",
    "pytest>=8.3.5",
    "python-dotenv>=1.0.1",
    "ruff>=0.9.10",
]

[project.scripts]
langchain-motex = "langchain_motex:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.ruff]
indent-width = 4
line-length = 88

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "AIR",    # Airflow
    "ERA",    # eradicate
    "D100",   # undocumented-public-module
    "D101",   # undocumented-public-class
    "D104",   # undocumented-public-package
    "COM812",
]
fixable = ["ALL"]
unfixable = [
    "F401", # unused-import
    "F841", # unused-variable
]

[tool.ruff.lint.mccabe]
max-complexity = 10 # maximum complexity

[tool.ruff.lint.pydocstyle]
convention = "google" # docstring style

[tool.ruff.format]
docstring-code-format = true
indent-style = "space"
line-ending = "lf"
quote-style = "double"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    "F401", # unused-import
]

[tool.pyright]
typeCheckingMode = "basic"
